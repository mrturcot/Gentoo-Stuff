#!/bin/bash

#set -o xtrace

# get colors
source $HOME/scripts/colors

echo -en '\n'
echo -e "${BB}###### [ ${BY}!! SUPER MEGA UPDATE !!${NC}${BB} ] ######${NC}"
sleep 1

## eix-sync

while true; do
	echo -en '\n'
	echo -e "${BB}###### [ ${BIP}Sync ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
	echo -en '\n'
case $yn in
	[yY] ) echo -e " ${BY}* ${BIG}OK${NC} Syncing${BB} ......${NC}"
	echo -en '\n'
	sleep 1
	eix-sync &&
	echo -en '\n'
	echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
		break;;
	[nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
	sleep 1
		break;;
	 * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
    esac
done

echo -en '\n'

## emerge -avuND

while true; do
	echo -e "${BB}###### [ ${BIP}Update ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
	echo -en '\n'
case $yn in
	[yY] ) echo -e " ${BY}* ${BIG}OK${NC} Updating${BB} ......${NC}"
	echo -en '\n'
	sleep 1
	emerge-update &&
	echo -en '\n'
	echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
		break;;
	[nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
	sleep 1
		break;;
	 * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
	echo -en '\n';;
    esac
done

echo -en '\n'

## Make / Install Kernel

while true; do
	echo -e "${BB}###### [ ${BIP}Make Kernel ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
	echo -en '\n'
case $yn in
	[yY] ) echo -e " ${BY}* ${BIG}OK${NC} Building${BB} ......${NC}"
	echo -en '\n'
	sleep 1
	autokernel &&
	echo -en '\n'
	echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
		break;;
	[nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
	sleep 1
		break;;
	 * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
	echo -en '\n';;
    esac
done

echo -en '\n'

## @smart-live-rebuild

while true; do
	echo -e "${BB}###### [ ${BIP}Smart Rebuild ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
	echo -en '\n'
case $yn in
	[yY] ) echo -e " ${BY}* ${BIG}OK${NC} Rebuilding${BB} ......${NC}"
	echo -en '\n'
	sleep 1
	emerge @smart-live-rebuild &&
	echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
		break;;
	[nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
	sleep 1
		break;;
	 * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
	echo -en '\n';;
    esac
done

echo -en '\n'

## --depclean

while true; do
	echo -e "${BB}###### [ ${BIP}depclean ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
	echo -en '\n'
case $yn in
	[yY] ) echo -e " ${BY}* ${BIG}OK${NC} Cleaning${BB} ......${NC}"
	echo -en '\n'
	sleep 1
	emerge-depclean &&
	echo -en '\n'
	echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
		break;;
	[nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
		sleep 1
		break;;
	 * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
	echo -en '\n';;
    esac
done

echo -en '\n'
echo -e "${BB}###### [ ${BY}!! Finished !!${NC}${BB} ] ######${NC}"
sleep 1

#set +o xtrace
