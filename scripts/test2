#!/bin/bash

#set -o xtrace

source $HOME/scripts/colors

cd $HOME/github/dhewm3
echo -en '\n'
echo -e "${BIB}###### [ ${BIC}dhewm3 ${NC}${BIB} ] ######${NC}"
if [[ $(git pull --dry-run) == *fuck* ]]; then
echo -e "${BIB}###### [ ${BIY}Up to Date, Skipping${NC}${BIB} ] ######${NC}";
else
while true; do
echo -e "${BB}###### [ ${BIP}update ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
echo -en '\n'
case $yn in
   [yY] ) echo -e " ${BY}* ${BIG}OK${NC} we will proceed${BB} ......${NC}"
   echo -en '\n'
   sleep 1
   echo build command here &&
   echo -en '\n'
   echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
   break;;
   [nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
   break;;
   * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
   echo -en '\n';;
esac
done
fi
echo -en '\n'
cd $HOME/github/dolphin
echo -e "${BIB}###### [ ${BIC}dolphin ${NC}${BIB} ] ######${NC}"
if [[ $(git pull --dry-run) == *fuck* ]]; then
echo -e "${BIB}###### [ ${BIY}Up to Date, Skipping${NC}${BIB} ] ######${NC}";
else
while true; do
echo -e "${BB}###### [ ${BIP}update ???${NC}${BB} ] ######${NC}"
read -p "$(echo -e "Yes or No [${BG}y${NC}/${BR}n${NC}]") " yn
echo -en '\n'
case $yn in
   [yY] ) echo -e " ${BY}* ${BIG}OK${NC} we will proceed${BB} ......${NC}"
   echo -en '\n'
   sleep 1
   echo build command here &&
   echo -en '\n'
   echo -e "${BB}###### [ ${BIP}!! Done !!${NC}${BB} ] ######${NC}"
   break;;
   [nN] ) echo -e " ${BY}*${NC} Skipping${BB} ......${NC}"
   break;;
   * )echo -e "${R} ****** INVALID RESPONSE ******${NC}"
   echo -en '\n';;
esac
done
fi

set +o xtrace